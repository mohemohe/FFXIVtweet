<Window x:Class="FFXIVtweet.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:FFXIVtweet.Views"
        xmlns:vm="clr-namespace:FFXIVtweet.ViewModels"
        xmlns:b="clr-namespace:FFXIVtweet.Behaviors"
        Title="FFXIVtweet" Height="350" Width="310.387">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid>
        <Label Content="name" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
        <TextBox Height="23" Margin="55,13,10,0" TextWrapping="Wrap" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top">
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="false"/>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <VisualBrush Stretch="None" AlignmentX="Left">
                                            <VisualBrush.Visual>
                                                <TextBlock Text="Example E." Foreground="#80000000"></TextBlock>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <Label Content="prefix" HorizontalAlignment="Left" Margin="10,41,0,0" VerticalAlignment="Top"/>
        <Label Content="{}{{ss}}: 全角/半角スペース" HorizontalAlignment="Right" Margin="0,67,10,0" VerticalAlignment="Top"/>
        <TextBox Height="23" Margin="55,44,10,0" TextWrapping="Wrap" Text="{Binding Prefix, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top">
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="false"/>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <VisualBrush Stretch="None" AlignmentX="Left">
                                            <VisualBrush.Visual>
                                                <TextBlock Text="tw" Foreground="#80000000"></TextBlock>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <Label Content="log" HorizontalAlignment="Left" Margin="10,74,0,0" VerticalAlignment="Top"/>
        <ScrollViewer Margin="0,100,0,0" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Visible">
            <i:Interaction.Behaviors>
                <b:AutoScrollBehavior></b:AutoScrollBehavior>
            </i:Interaction.Behaviors>
            <ListBox ItemsSource="{Binding DeferredLogList, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Delay=100}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" IsSynchronizedWithCurrentItem="True" BorderBrush="{x:Null}" />
        </ScrollViewer>
    </Grid>
</Window>
